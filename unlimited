if game.PlaceId == 6839171747 then
	

	
	local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()


	local Window = Rayfield:CreateWindow({
		Name = "Gambol's Doors Scripts 🚪",
		LoadingTitle = "Doors Script",
		LoadingSubtitle = "by Gambol",
		ConfigurationSaving = {
			Enabled = true,
			FolderName = "Germany", -- Create a custom folder for your hub/game
			FileName = "Gambol's Hub"
		},
		Discord = {
			Enabled = false,
			Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD.
			RememberJoins = true -- Set this to false to make them join the discord every time they load it up
		},
		KeySystem = false, -- Set this to true to use our key system
		KeySettings = {
			Title = "Gambol's Doors Scripts 🚪",
			Subtitle = "Key System",
			Note = "Dm Gambol with the word (among us) to recieve the key.",
			FileName = "Gambol Key",
			SaveKey = true,
			GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
			Key = "PPNFMNAWLZVWAQCZMKYVJCZALSDSSXQDFAR"
		}
	})


	-- Tabs

	local MainTab = Window:CreateTab("Main", 4483362458) -- Title, Image

	local ToolsTab = Window:CreateTab("Tools", 4483362458) -- Title, Image

	local ScriptsTab = Window:CreateTab("Scripts", 4483362458) -- Title, Image
	
	local CharTab = Window:CreateTab("Character", 4483362458) -- Title, Image

	
	local RoomsTab = Window:CreateTab("Rooms", 4483362458)
	
	local ConfigTab = Window:CreateTab("Configs", 4483362458) -- Title, Image	

	
	
	-- TextBox
	

	
	
	-- Color Picker
	
	local ColorPicker = ConfigTab:CreateColorPicker({
		Name = "Color Picker",
		Color = Color3.fromRGB(255,255,255),
		Flag = "ColorPicker1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			
		end
	})
	

	--Buttons 
	
	
	

	
	
	
	local Button = MainTab:CreateButton({
		Name = "Noclip (Press r to Enable/Disable)",
		Callback = function()
			
			_G.Keybind = "R"
			_G.ClipGui = true
			_G.IncludeNoclip = true

			local isEnabled = false

			local UIS = game:GetService("UserInputService")

			local Plr = game.Players.LocalPlayer
			local Char = Plr.Character or Plr.CharacterAdded:Wait()

			local ScreenGui = Instance.new("ScreenGui")
			ScreenGui.Parent = game.CoreGui
			ScreenGui.Enabled = _G.ClipGui or false

			local TextLabel = Instance.new("TextLabel")
			TextLabel.Parent = ScreenGui

			TextLabel.AnchorPoint = Vector2.new(1, 0)
			TextLabel.Position = UDim2.new(1, -5, 0, 0)
			TextLabel.Text = "Noclip + Bypasser: Off"
			TextLabel.Size = UDim2.new(0,200,0,75)
			TextLabel.TextScaled = true
			TextLabel.TextStrokeColor3 = Color3.new(1,1,1)
			TextLabel.TextStrokeTransparency = 0
			TextLabel.BackgroundTransparency = 1

			function getValue()
				local value
				if isEnabled then
					value = "On"
				else
					value = "Off"
				end
				return value
			end

			UIS.InputBegan:Connect(function(input, gp)
				if gp then return end

				if input.KeyCode == Enum.KeyCode[_G.Keybind] then
					isEnabled = not isEnabled
					task.wait()
					TextLabel.Text = "Noclip + Bypasser: " .. getValue()
				end
			end)

			game:GetService("RunService").RenderStepped:Connect(function()
				if not Char:FindFirstChild("HumanoidRootPart") then return end
				if _G.IncludeNoclip then
					Char.HumanoidRootPart.CanCollide = not isEnabled
					Char.Collision.CanCollide = not isEnabled
				end

				local HrpCFrame = Char.HumanoidRootPart.CFrame

				local ray = Ray.new(HrpCFrame.Position, HrpCFrame.LookVector * 0.5)
				local part = workspace:FindPartOnRay(ray)
				if part and part.CanCollide == true and isEnabled then
					Char.HumanoidRootPart.Anchored = true
					Char:PivotTo(Char.HumanoidRootPart.CFrame * CFrame.new(0, 1000, 0))
					task.wait()
					Char:PivotTo(Char.HumanoidRootPart.CFrame * CFrame.new(0, 0, -4))
					task.wait()
					Char:PivotTo(Char.HumanoidRootPart.CFrame * CFrame.new(0, -1000, 0))
					task.wait(0.1)
					Char.HumanoidRootPart.Anchored = false
				end
			end)		end,
	})
	
	local Button = ToolsTab:CreateButton({
		Name = "Shears on anything",
		Callback = function()
			local Tool = game:GetObjects("rbxassetid://12685165702")[1]
			local Humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
			local Sound = Instance.new("Sound")

			Tool.Parent = game.Players.LocalPlayer.Backpack

			Sound.PlaybackSpeed = 1.25
			Sound.SoundId = "rbxassetid://9118823101"
			Sound.Parent = Tool

			Tool.Activated:Connect(function()
				local Use = Tool.Animations.use
				local UseTrack = Humanoid:LoadAnimation(Use)

				UseTrack:Play()
				Sound:Play()
				wait(0.25)
				Sound:Play()
				game:GetService("Players").LocalPlayer:GetMouse().Target:FindFirstAncestorOfClass("Model"):Destroy()
			end)

			Tool.Equipped:Connect(function()
				local Idle = Tool.Animations.idle
				local IdleTrack = Humanoid:LoadAnimation(Idle)

				IdleTrack:Play()
			end)
			Tool.Unequipped:Connect(function()
				for _,anim in pairs(Humanoid.Animator:GetPlayingAnimationTracks()) do
					anim:Stop()
				end
			end)

		end,


	})
	

	local Button = ToolsTab:CreateButton({
		Name = "Tablet",
		Callback = function()
			_G.OnShop = true -- can buy on pre run shop, set to false if you dont want it at the start elevator, put at true if you want to see the table/scanner on the elevator shop.
			_G.Price = 1000 -- tablet price on shop
			_G.Description = "" -- tablet description on shop

			loadstring(game:HttpGet('https://raw.githubusercontent.com/DeividComSono/Scripts/main/Scanner.lua'))()
		end,


	})



	local Button = ScriptsTab:CreateButton({
		Name = "Vynixius",
		Callback = function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Vynixius/main/Doors/Loader.lua"))()
		end,


	})

	local Button = ScriptsTab:CreateButton({
		Name = "PD Edited",
		Callback = function()
			loadstring(game:HttpGet(("https://raw.githubusercontent.com/mstudio45/poopdoors_edited/main/poopdoors_edited.lua"),true))()
		end


	})


	local Button = ScriptsTab:CreateButton({
		Name = "PoopDoors (Not recommended)",
		Callback = function()
			loadstring(game:HttpGet('https://raw.githubusercontent.com/zoophiliaphobic/POOPDOORS/main/script.lua'))()
		end
	})
	

	local Button = MainTab:CreateButton({
		Name = "Fullbright",
		Callback = function()
			local Light = game:GetService("Lighting")

			function dofullbright()
				Light.Ambient = Color3.new(1, 1, 1)
				Light.ColorShift_Bottom = Color3.new(1, 1, 1)
				Light.ColorShift_Top = Color3.new(1, 1, 1)
			end

			dofullbright()

			Light.LightingChanged:Connect(dofullbright)	end,
	})
	




	local Button = ToolsTab:CreateButton({
		Name = "Dupe Plushie",
		Callback = function()
			loadstring(game:HttpGet('https://raw.githubusercontent.com/GambolOfficial/Gambol-2.0/main/Duple'))()
		end
	})




	--Toggles
	

	
	local Toggle = RoomsTab:CreateToggle({
		Name = "A-60 & A-120 Notifier",
		CurrentValue = false,
		Flag = "A60", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			if Value == true then 
			workspace.ChildAdded:Connect(function(Obj)
				if Obj.Name:sub(1, 1) == "A" and Obj.Name ~= "AmbushMoving" then
						Rayfield:Notify({
							Title = "Spawned",
							Content = "Hide Quick!",
							Duration = 4,
							Image = 11419713314,
						})
				end
			end)
			workspace.ChildRemoved:Connect(function(Obj)
				if Obj.Name:sub(1, 1) == "A" and Obj.Name ~= "AmbushMoving" then
						Rayfield:Notify({
							Title = "Despawned ",
							Content = "You can leave now",
							Duration = 4,
							Image = 11419719540,
						})
				end
			end)
		end
	end,
	})
	
	local Toggle = RoomsTab:CreateToggle({
		Name = "A-90 Remover",
		CurrentValue = false,
		Flag = "A90", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			if Value == true then
				local Plr = game.Players.LocalPlayer
				local ModuleScripts = {
					MainGame = Plr.PlayerGui.MainUI.Initiator.Main_Game,
				}


				ModuleScripts.MainGame.RemoteListener.Modules["A90"].Name = "Baller"
			end
		end,
	})

	
	
	
	
	-- No Screech
	
	local Toggle = MainTab:CreateToggle({
		Name = "No Screech",
		CurrentValue = false,
		Flag = "ScreechToggle", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			local old
			old = hookmetamethod(game,"__namecall",newcclosure(function(self,...)
				local args = {...}
				local method = getnamecallmethod()

				if tostring(self) == 'Screech' and method == "FireServer" and Value == true then
					args[1] = true
					return old(self,unpack(args))
				end
				return old(self,...)
			end))

			workspace.CurrentCamera.ChildAdded:Connect(function(child)
				if child.Name == "Screech" and Value == true then
					child:Destroy()
				end
			end)
		end,
	})
	
	
	
	
	local Button = MainTab:CreateButton({
		Name ="Destroy Gui",
		Callback = function()
			Rayfield:Destroy()		end,
	})
	
	
	-- Headlight
	local pcl = Instance.new("SpotLight")
	pcl.Brightness = 1
	pcl.Face = Enum.NormalId.Front
	pcl.Range = 90
	pcl.Parent = game.Players.LocalPlayer.Character.Head
	pcl.Enabled = false
	
	local Toggle = MainTab:CreateToggle({
		Name = "Instant Interact",
		CurrentValue = false,
		Flag = "InstantToggle", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			local holdconnect
			holdconnect = game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)
				if Value == true then
					fireproximityprompt(prompt)
				elseif Value == false then 
					holdconnect:Disconnect()
				end
				
			end)

	end
		
	})
	
	local Toggle = CharTab:CreateToggle({
		Name = "Headlight",
		CurrentValue = false,
		Flag = "Headlight", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)
			pcl.Enabled = Value
		end,
	})
	
	
	
	

	-- Notification


	-- Sliders

	local Slider = MainTab:CreateSlider({
		Name = "FOV (Not Working)",
		Range = {0, 120},
		Increment = 10,
		Suffix = "FOV",
		CurrentValue = 10,
		Flag = "Fov", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
		Callback = function(Value)

			game:GetService("Workspace").CurrentCamera.FieldOfView = Value
		end,
	})





	--Sections









elseif game.PlaceId == 6516141723 then
	for _, instance in next, game.CoreGui:GetChildren() do
		if instance.Name == "Rayfield" or instance.Name == "OldRayfield" then
			instance:Remove()
		end
	end

	local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
	
	local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
	local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
	
	
	Rayfield:Notify({
		Title = "Gambol's Doors Scripts 🚪",
		Content = "Choose the elevator",
		Duration = 6.5,
		Image = 11295275950,
		Actions = {
			
			A = {
				Name = "1",
				Callback = function()
					function message(text)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 3;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)

						task.spawn(function()
							local msg = Instance.new("Message",workspace)
							msg.Text = tostring(text)
							task.wait(5)
							msg:Destroy()
						end)
					end

					function normalmessage(title, text, timee)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 3;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)

						Notification:Notify(
							{Title = title, Description = text},
							{OutlineColor = Color3.fromRGB(80, 80, 80),Time = timee or 5, Type = "default"}
						)
					end

					function confirmnotification(title, text, timee, callback)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 3;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)

						Notification:Notify(
							{Title = title, Description = text},
							{OutlineColor = Color3.fromRGB(80, 80, 80), Time = timee or 10, Type = "option"},
							{Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84), Callback = callback or function(state)end}
						)
					end 

					function warnmessage(title, text, timee)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 5;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)
						Notification:Notify(
							{Title = title, Description = text},
							{OutlineColor = Color3.fromRGB(80, 80, 80),Time = timee or 5, Type = "image"},
							{Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84)}
						)
					end

					local teleported = false
					repeat
						for _,v in pairs(game:GetService("Workspace").Lobby.LobbyElevators:GetChildren()) do
							--pcall(function()
							if v:FindFirstChild("DoorHitbox") then
								if v.DoorHitbox:FindFirstChild("BillboardGui") then
									if v.DoorHitbox.BillboardGui:FindFirstChild("Title") then
										if v.DoorHitbox.BillboardGui.Title.Text == "0 / 1" or v.DoorHitbox.BillboardGui.Title.Text == "0 / 12" then
											repeat
												game.Players.LocalPlayer.Character:PivotTo(v.DoorHitbox.CFrame)
												task.wait()
											until v.DoorHitbox.BillboardGui.Title.Text == "1 / 1" or v.DoorHitbox.BillboardGui.Title.Text == "1 / 12"
											teleported = true
											break
										end
									end
								end
							end
							--end)
						end
						task.wait(1)
						if teleported == false then
							Rayfield:Notify({
								Title = "Gambol's Doors Scripts 🚪",
								Content = "Solo's games are full, retrying...",
								Duration = 6.5,
								Image = 11295275950,
							})						end
					until teleported == true
					Rayfield:Notify({
						Title = "Gambol's Doors Scripts 🚪",
						Content = "Joining...",
						Duration = 2,
						Image = 11295275950,
					})
				end
			},
			
			D = {
				Name = "2",
				Callback = function()
					function message(text)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 3;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)

						task.spawn(function()
							local msg = Instance.new("Message",workspace)
							msg.Text = tostring(text)
							task.wait(5)
							msg:Destroy()
						end)
					end

					function normalmessage(title, text, timee)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 3;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)

						Notification:Notify(
							{Title = title, Description = text},
							{OutlineColor = Color3.fromRGB(80, 80, 80),Time = timee or 5, Type = "default"}
						)
					end

					function confirmnotification(title, text, timee, callback)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 3;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)

						Notification:Notify(
							{Title = title, Description = text},
							{OutlineColor = Color3.fromRGB(80, 80, 80), Time = timee or 10, Type = "option"},
							{Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84), Callback = callback or function(state)end}
						)
					end 

					function warnmessage(title, text, timee)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 5;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)
						Notification:Notify(
							{Title = title, Description = text},
							{OutlineColor = Color3.fromRGB(80, 80, 80),Time = timee or 5, Type = "image"},
							{Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84)}
						)
					end

					local teleported = false
					repeat
						for _,v in pairs(game:GetService("Workspace").Lobby.LobbyElevators:GetChildren()) do
							--pcall(function()
							if v:FindFirstChild("DoorHitbox") then
								if v.DoorHitbox:FindFirstChild("BillboardGui") then
									if v.DoorHitbox.BillboardGui:FindFirstChild("Title") then
										if v.DoorHitbox.BillboardGui.Title.Text == "0 / 2" or v.DoorHitbox.BillboardGui.Title.Text == "0 / 12" or v.DoorHitbox.BillboardGui.Title.Text == "1 / 2" then
											repeat
												game.Players.LocalPlayer.Character:PivotTo(v.DoorHitbox.CFrame)
												task.wait()
											until v.DoorHitbox.BillboardGui.Title.Text == "1 / 2" or v.DoorHitbox.BillboardGui.Title.Text == "1 / 12" or v.DoorHitbox.BillboardGui.Title.Text == "2 / 2"
											teleported = true
											break
										end
									end
								end
							end
							--end)
						end 
						task.wait(1)
						if teleported == false then
							Rayfield:Notify({
								Title = "Gambol's Doors Scripts 🚪",
								Content = "Double's games are full, retrying...",
								Duration = 6.5,
								Image = 11295275950,
								Actions = { -- Notification Buttons
								},
							})						end
					until teleported == true
					Rayfield:Notify({
						Title = "Gambol's Doors Scripts 🚪",
						Content = "Joining...",
						Duration = 2,
						Image = 11295275950,

					})
				end

			},
			
			C = {
				Name = "3",
				Callback = function()
					function message(text)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 3;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)

						task.spawn(function()
							local msg = Instance.new("Message",workspace)
							msg.Text = tostring(text)
							task.wait(5)
							msg:Destroy()
						end)
					end

					function normalmessage(title, text, timee)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 3;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)

						Notification:Notify(
							{Title = title, Description = text},
							{OutlineColor = Color3.fromRGB(80, 80, 80),Time = timee or 5, Type = "default"}
						)
					end

					function confirmnotification(title, text, timee, callback)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 3;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)

						Notification:Notify(
							{Title = title, Description = text},
							{OutlineColor = Color3.fromRGB(80, 80, 80), Time = timee or 10, Type = "option"},
							{Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84), Callback = callback or function(state)end}
						)
					end 

					function warnmessage(title, text, timee)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 5;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)
						Notification:Notify(
							{Title = title, Description = text},
							{OutlineColor = Color3.fromRGB(80, 80, 80),Time = timee or 5, Type = "image"},
							{Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84)}
						)
					end

					local teleported = false
					repeat
						for _,v in pairs(game:GetService("Workspace").Lobby.LobbyElevators:GetChildren()) do
							--pcall(function()
							if v:FindFirstChild("DoorHitbox") then
								if v.DoorHitbox:FindFirstChild("BillboardGui") then
									if v.DoorHitbox.BillboardGui:FindFirstChild("Title") then
										if v.DoorHitbox.BillboardGui.Title.Text == "0 / 3" or v.DoorHitbox.BillboardGui.Title.Text == "0 / 12" or v.DoorHitbox.BillboardGui.Title.Text == "1 / 3" or v.DoorHitbox.BillboardGui.Title.Text == "2 / 3" then
											repeat
												game.Players.LocalPlayer.Character:PivotTo(v.DoorHitbox.CFrame)
												task.wait()
											until v.DoorHitbox.BillboardGui.Title.Text == "1 / 3" or v.DoorHitbox.BillboardGui.Title.Text == "1 / 12" or  v.DoorHitbox.BillboardGui.Title.Text == "2 / 3" or  v.DoorHitbox.BillboardGui.Title.Text == "3 / 3"
											teleported = true
											break
										end
									end
								end
							end
							--end)
						end
						task.wait(1)
						if teleported == false then
							Rayfield:Notify({
								Title = "Gambol's Doors Scripts 🚪",
								Content = "Triple's games are full, retrying...",
								Duration = 6.5,
								Image = 11295275950,
								Actions = { -- Notification Buttons
									Ignore = {
									},
								},
							})						end
					until teleported == true
					Rayfield:Notify({
						Title = "Gambol's Doors Scripts 🚪",
						Content = "Joining...",
						Duration = 2,
						Image = 11295275950,
					})				end
			},
			
			
			
			B = {
				Name = "4",
				Callback = function()
					function message(text)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 3;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)

						task.spawn(function()
							local msg = Instance.new("Message",workspace)
							msg.Text = tostring(text)
							task.wait(5)
							msg:Destroy()
						end)
					end

					function normalmessage(title, text, timee)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 3;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)

						Notification:Notify(
							{Title = title, Description = text},
							{OutlineColor = Color3.fromRGB(80, 80, 80),Time = timee or 5, Type = "default"}
						)
					end

					function confirmnotification(title, text, timee, callback)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 3;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)

						Notification:Notify(
							{Title = title, Description = text},
							{OutlineColor = Color3.fromRGB(80, 80, 80), Time = timee or 10, Type = "option"},
							{Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84), Callback = callback or function(state)end}
						)
					end 

					function warnmessage(title, text, timee)
						task.spawn(function()
							local notif = Instance.new("Sound");notif.Parent = game.SoundService;notif.SoundId = "rbxassetid://4590657391";notif.Volume = 5;notif:Play();notif.Stopped:Wait();notif:Destroy()
						end)
						Notification:Notify(
							{Title = title, Description = text},
							{OutlineColor = Color3.fromRGB(80, 80, 80),Time = timee or 5, Type = "image"},
							{Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84)}
						)
					end

					local teleported = false
					repeat
						for _,v in pairs(game:GetService("Workspace").Lobby.LobbyElevators:GetChildren()) do
							--pcall(function()
							if v:FindFirstChild("DoorHitbox") then
								if v.DoorHitbox:FindFirstChild("BillboardGui") then
									if v.DoorHitbox.BillboardGui:FindFirstChild("Title") then
										if v.DoorHitbox.BillboardGui.Title.Text == "0 / 4" or v.DoorHitbox.BillboardGui.Title.Text == "0 / 12" or v.DoorHitbox.BillboardGui.Title.Text == "1 / 4" or v.DoorHitbox.BillboardGui.Title.Text == "2 / 4" or v.DoorHitbox.BillboardGui.Title.Text == "3 / 4" then
											repeat
												game.Players.LocalPlayer.Character:PivotTo(v.DoorHitbox.CFrame)
												task.wait()
											until v.DoorHitbox.BillboardGui.Title.Text == "1 / 4" or v.DoorHitbox.BillboardGui.Title.Text == "1 / 12" or v.DoorHitbox.BillboardGui.Title.Text == "2 / 4" or v.DoorHitbox.BillboardGui.Title.Text == "3 / 4" or v.DoorHitbox.BillboardGui.Title.Text == "4 / 4"
											teleported = true
											break
										end
									end
								end
							end
							--end)
						end
						task.wait(1)
						if teleported == false then
							Rayfield:Notify({
								Title = "Gambol's Doors Scripts 🚪",
								Content = "Squad's games are full, retrying...",
								Duration = 3,
								Image = 11295275950,
							})						end
					until teleported == true
					Rayfield:Notify({
						Title = "Gambol's Doors Scripts 🚪",
						Content = "Joining...",
						Duration = 2,
						Image = 11295275950,
					})				end
			},

			

			
			
			
			
			-- Notification Buttons

		},
	})
end



if game.PlaceId == 6839171747 then
	local floor = game:GetService("ReplicatedStorage").GameData.Floor.Value
	
	if floor == "Rooms" then
		-- init
		local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GreenDeno/Venyx-UI-Library/main/source.lua"))()
		local venyx = library.new("Gambol's Rooms Scripts 🚪", 5013109572)

		-- themes
		local themes = {
			Background = Color3.fromRGB(24, 24, 24),
			Glow = Color3.fromRGB(0, 0, 0),
			Accent = Color3.fromRGB(10, 10, 10),
			LightContrast = Color3.fromRGB(20, 20, 20),
			DarkContrast = Color3.fromRGB(14, 14, 14),  
			TextColor = Color3.fromRGB(255, 255, 255)
		}
				
		
		
		

		-- pages
		local page = venyx:addPage("Main", 5012544693)
		local theme = venyx:addPage("Theme", 5012544693)
		local configs = venyx:addPage("Configs", 5012544693)
		
		
		
		 -- Sections
		local section1 = page:addSection("Main")
		local section2 = page:addSection("Rooms")
		local config = configs:addSection("Configs")

		
		-- config tab
		
		config:addKeybind("Toggle Keybind", Enum.KeyCode.One, function()
			print("Activated Keybind")
			venyx:toggle()
		end, function()
			print("Changed Keybind")
		end)
		
			
		
		section1:Resize(smooth)

		
	section1:addButton("💡 Fullbright", function()
			local Light = game:GetService("Lighting")

			function dofullbright()
				Light.Ambient = Color3.new(1, 1, 1)
				Light.ColorShift_Bottom = Color3.new(1, 1, 1)
				Light.ColorShift_Top = Color3.new(1, 1, 1)
			end

			dofullbright()

			Light.LightingChanged:Connect(dofullbright)	
	end)
		

	section2:addToggle("A90 remover", nil, function(value)
			if value == true then
			local Plr = game.Players.LocalPlayer
			local ModuleScripts = {
				MainGame = Plr.PlayerGui.MainUI.Initiator.Main_Game,
			}


				ModuleScripts.MainGame.RemoteListener.Modules["A90"].Name = "Baller"
				end
		end)
		section2:addToggle("A90 & A120 Notifier", nil, function(value)
			if value == true then
			workspace.ChildAdded:Connect(function(Obj)
				if Obj.Name:sub(1, 1) == "A" and Obj.Name ~= "AmbushMoving" then
				venyx:Notify(title, context)
				title = "Entity has spawned hide ⚠️"
				context = "Go hide quick!"
					end
					
				end)
				
				workspace.ChildRemoved:Connect(function(Obj)
					if Obj.Name:sub(1, 1) == "A" and Obj.Name ~= "AmbushMoving" then
						venyx:Notify(title, context)
						title = "Entity has despawned ✅"
						context = "You can leave now"
					end
				end)
						
				end
			

		end)
		-- second page
		local colors = theme:addSection("Colors")

		for theme, color in pairs(themes) do -- all in one theme changer, i know, im cool
			colors:addColorPicker(theme, color, function(color3)
				venyx:setTheme(theme, color3)
			end)
		end

		-- load
		venyx:SelectPage(venyx.pages[1], true)
		

	end
end
